import{FunctionGraph as e,setupAudio as n,setupPlayerControls as a}from"./common.js";window.addEventListener("load",(async()=>{const o=200,t=await n({init(e){const n=new AudioBuffer({numberOfChannels:1,length:e.sampleRate*o/1e3,sampleRate:e.sampleRate}),a=800/Math.sqrt(n.length)*e.sampleRate/44100;return{audioCtx:e,convolverNode:null,dryGainNode:null,wetGainNode:null,impulseResponseBuffer:n,set bypass(e){this._bypass=e,this.updateCoefficients()},updateCoefficients(){this.dryGainNode&&(this.dryGainNode.gain.value=this._bypass?1:0),this.wetGainNode&&(this.wetGainNode.gain.value=this._bypass?0:a)},_bypass:!1}},setup(e,n,a){e.convolverNode=e.audioCtx.createConvolver(),e.convolverNode.buffer=e.impulseResponseBuffer,n.connect(e.convolverNode),e.wetGainNode=e.audioCtx.createGain(),e.convolverNode.connect(e.wetGainNode),e.wetGainNode.connect(a),e.dryGainNode=e.audioCtx.createGain(),n.connect(e.dryGainNode),e.dryGainNode.connect(a),e.updateCoefficients()},teardown(e){e.convolverNode&&(e.convolverNode.disconnect(),e.convolverNode=null)}});a(t,[{type:"remote",label:"Drums",url:"audio/434013__mrpearch__drum-patern.mp3"},{type:"remote",label:"Speech",url:"audio/Ada_Lovelace_(By_Megan_Smith).ogx"}]);const r={x:30,y:.3},s={x:50,y:.8};let i=o;const l=e=>{if(e<r.x)return(e-r.x)*r.y/r.x+r.y;if(e<s.x){const n=(s.y-r.y)/(s.x-r.x);return(e-s.x)*n+s.y}const n=i-s.x;return n<=0?0:s.y*Math.pow(2,-(e-s.x)/n)},c=()=>{const e=t.proc.impulseResponseBuffer.getChannelData(0);for(let n=0;n<e.length;n++)e[n]=(2*Math.random()-1)*l(n/t.sampleRate*1e3);t.proc.convolverNode&&(t.proc.convolverNode.buffer=t.proc.impulseResponseBuffer)};c();const d=new e(document.getElementById("funccanvas"));d.logx=!1,d.xlim=[0,o],d.xlabel="time in ms",d.ylim=[-1,1];const m=new Float32Array(t.proc.impulseResponseBuffer),u=new Float32Array(t.proc.impulseResponseBuffer),p=()=>{for(let e=0;e<m.length;e++){const n=o*e/(m.length-1);m[e]=n,u[e]=l(n)}d.drawData(m,t.proc.impulseResponseBuffer.getChannelData(0),"#00685e",m,u),d.drawMarkers([[r.x,r.y],[s.x,s.y],[i,0]])};d.addEventListener("markermove",(e=>{0===e.marker&&(r.x=Math.max(Math.min(e.valX,s.x),0),r.y=Math.max(Math.min(e.valY,1),0)),1===e.marker&&(s.x=Math.max(Math.min(e.valX,i),r.x),s.y=Math.max(Math.min(e.valY,1),0)),2===e.marker&&(i=Math.max(Math.min(e.valX,o),s.x)),p()})),d.addEventListener("markermoveend",(()=>{c(),p()})),document.getElementById("bypass").onchange=function(e){t.proc.bypass=e.target.checked},p()}));