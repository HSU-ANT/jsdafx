import{SignalGraph as e,setupAudio as o,setupPlayerControls as t}from"./common.js";window.addEventListener("load",(async()=>{const n={tremolo:.5,vibrato:.003,flanger:.002,chorus:.015},a={tremolo:0,vibrato:1,flanger:1,chorus:.3},d={tremolo:0,vibrato:0,flanger:1,chorus:1},i=await o({init:e=>({audioCtx:e,_type:"tremolo",_bypass:!1,_modulationFrequency:1,_modulationDepth:1,modulationSourceNode:null,modulationGainNode:null,modulationNode:null,modulationNoiseSourceNodes:null,modulationNoiseGainNodes:null,delayNodes:null,dryGainNode:null,tremoloWetGainNode:null,delayWetGainNode:null,chorusDelayWetGainNode:null,updateCoefficients(){if(this.modulationGainNode){this.tremoloWetGainNode.gain.value=this._bypass||"tremolo"!==this._type?0:1,this.delayWetGainNode.gain.value=this._bypass?0:a[this._type],this.chorusDelayWetGainNode.gain.value=this._bypass||"chorus"!==this._type?0:.3,this.dryGainNode.gain.value=this._bypass?1:d[this._type],this.modulationGainNode.gain.value="chorus"!==this._type?n[this._type]*this._modulationDepth:0;for(let e=0;e<3;e++)this.modulationNoiseGainNodes[e].gain.value="chorus"===this._type?n[this._type]*this._modulationDepth:0;this.modulationSourceNode.frequency.value=this._modulationFrequency;for(let e=0;e<3;e++)this.modulationNoiseSourceNodes[e].parameters.get("fadePeriod").value=.5/this._modulationFrequency;this.modulationNode.gain.value=1-.5*this._modulationDepth;for(let e=0;e<3;e++)this.delayNodes[e].delayTime.value=n[this._type]*this._modulationDepth+.008*e}},set type(e){this._type=e,this.updateCoefficients()},set bypass(e){this._bypass=e,this.updateCoefficients()},set modulationFrequency(e){this._modulationFrequency=e,this.updateCoefficients()},set modulationDepth(e){this._modulationDepth=e,this.updateCoefficients()}}),setup:(e,o,t)=>{e.modulationSourceNode=e.audioCtx.createOscillator(),e.modulationSourceNode.type="sine",e.modulationSourceNode.start(),e.modulationGainNode=e.audioCtx.createGain(),e.modulationNode=e.audioCtx.createGain(),e.modulationNoiseSourceNodes=new Array(3),e.modulationNoiseGainNodes=new Array(3),e.delayNodes=new Array(3);for(let o=0;o<3;o++)e.modulationNoiseSourceNodes[o]=new AudioWorkletNode(e.audioCtx,"noisesource-processor",{numberOfInputs:0,outputChannelCount:[1]}),e.modulationNoiseGainNodes[o]=e.audioCtx.createGain(),e.delayNodes[o]=e.audioCtx.createDelay(),e.modulationNoiseSourceNodes[o].connect(e.modulationNoiseGainNodes[o]),e.modulationNoiseGainNodes[o].connect(e.delayNodes[o].delayTime);e.dryGainNode=e.audioCtx.createGain(),e.tremoloWetGainNode=e.audioCtx.createGain(),e.delayWetGainNode=e.audioCtx.createGain(),e.chorusDelayWetGainNode=e.audioCtx.createGain(),e.modulationSourceNode.connect(e.modulationGainNode),e.modulationGainNode.connect(e.modulationNode.gain),o.connect(e.modulationNode),e.modulationNode.connect(e.tremoloWetGainNode),e.tremoloWetGainNode.connect(t),e.modulationGainNode.connect(e.delayNodes[0].delayTime),o.connect(e.delayNodes[0]),o.connect(e.delayNodes[1]),o.connect(e.delayNodes[2]),e.delayNodes[0].connect(e.delayWetGainNode),e.delayNodes[1].connect(e.chorusDelayWetGainNode),e.delayNodes[2].connect(e.chorusDelayWetGainNode),e.delayWetGainNode.connect(t),e.chorusDelayWetGainNode.connect(t),o.connect(e.dryGainNode),e.dryGainNode.connect(t),e.updateCoefficients()},teardown:e=>{e.modulationSourceNode&&(e.modulationSourceNode.disconnect(),e.modulationSourceNode=null),e.modulationGainNode&&(e.modulationGainNode.disconnect(),e.modulationGainNode=null),e.modulationNode&&(e.modulationNode.disconnect(),e.modulationNode=null),e.modulationNoiseSourceNodes&&(e.modulationNoiseSourceNodes.forEach((e=>e.disconnect())),e.modulationNoiseSourceNodes=null),e.modulationNoiseGainNodes&&(e.modulationNoiseGainNodes.forEach((e=>e.disconnect())),e.modulationNoiseGainNodes=null),e.delayNodes&&(e.delayNodes.forEach((e=>e.disconnect())),e.delayNodes=null),e.dryGainNode&&(e.dryGainNode.disconnect(),e.dryGainNode=null),e.tremoloWetGainNode&&(e.tremoloWetGainNode.disconnect(),e.tremoloWetGainNode=null),e.delayWetGainNode&&(e.delayWetGainNode.disconnect(),e.delayWetGainNode=null),e.chorusDelayWetGainNode&&(e.chorusDelayWetGainNode.disconnect(),e.chorusDelayWetGainNode=null)}});t(i,[{type:"remote",label:"Guitar riff 1",url:"audio/Burns1.wav"},{type:"remote",label:"Guitar riff 2",url:"audio/BluesHawk1.wav"}]);const l=new e(i,document.getElementById("funccanvas")),u=document.getElementById("linear");u.checked=!1,u.onchange=function(e){l.freqLinear=e.target.checked};const s=e=>{l.drawWave=e,u.style.visibility=u.labels[0].style.visibility=e?"hidden":"visible"};s(!0),document.getElementById("spectrum").onchange=e=>{s(!e.target.checked)},document.getElementById("waveform").onchange=e=>{s(e.target.checked)},document.getElementById("bypass").checked=!1,document.getElementById("bypass").onchange=function(e){i.proc.bypass=e.target.checked};const c={tremolo:20,vibrato:5,flanger:1,chorus:5};document.getElementById("effecttype").value="tremolo",document.getElementById("effecttype").onchange=function(e){const o=e.target.value,t=c[o];if(void 0===t)return;i.proc.type=o,document.getElementById("diagram").src=`images/delays/${o}1.png`;const n=document.getElementById("modulationfrequency"),a=n.value*t/n.max;n.max=t,n.value=a,n.labels[0].innerText=`${a} Hz`,i.proc.modulationFrequency=a},document.getElementById("modulationfrequency").value=1,document.getElementById("modulationfrequency").oninput=function(e){e.target.labels[0].innerText=`${e.target.value} Hz`,i.proc.modulationFrequency=e.target.value},document.getElementById("modulationdepth").value=1,document.getElementById("modulationdepth").oninput=function(e){e.target.labels[0].innerText=e.target.value,i.proc.modulationDepth=e.target.value}}));